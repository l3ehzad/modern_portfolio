// Menu Button
.menu-btn {
    position: absolute;     //we want it always to be corner top
    z-index:3;
    right: 35px;
    top: 35px;
    cursor: pointer;   
    @include easeOut;

    .btn-line {
        width: 28px;
        height: 3px;
        margin: 5px 0;              //line distances from eachother
        border-radius: 25px;
        background: #fff;
        @include easeOut;           //the method we defined already for time of transformation
    }

    //Rotate Into X With Menu Lines.
    // clicking on the menu adds/removes show or close at the end of the class name via js. So we can define show or close as a class here. 
    &.close{        //we use &.className cause we're still part of .menu-btn class. 
        transform: rotate(180deg);

        .btn-line{
            // Line 1 - Rotate
            &:nth-child(1){
                background: $secondary-color;
                transform: rotate(45deg) translate(5px, 5px);
            }
            // Line 2 - Hide
            &:nth-child(2){
                opacity: 0;
            }
            // Line 3 - Rotate
            &:nth-child(3){
                background: $secondary-color;
                transform: rotate(-45deg) translate(7px, -6px);
            }
        }
    }
}

//Menu Overlay
.menu {
    position: fixed;
    top: 0;
    width: 100%;
    opacity: .93;               //after opening the menu it still shows what is underneath of that. 
    visibility: hidden;         // it hides the items (until now it was on the normal screen after opening the webpage)

    &.show{
       visibility: visible; 
    }

    .menu-branding, &-nav{            // .menu-branding = &-branding{} ->it adds "-branding" at the end of parent class name. 
        display: flex;
        flex-flow: column wrap;       // it makes them as colums not rows
        align-items: center;
        justify-content: center;
        float: left;
        width: 50%;
        height: 100vh;
        overflow: hidden;           //no scroll bars
    }

    &-nav {
        margin: 0;
        padding: 0;
        background: darken($primary-color, 5);
        list-style: none;           // it doesn't show bullet points besides the items
        transform: translate3d(0, 100%, 0);
        @include easeOut; 

        &.show {
            //slide in from top
            transform: translate3d(0,0,0);   //to get more info: google"translate 3d" 
        }
    }

    //Branding Side
    &-branding {
        background: $primary-color;
        transform: translate3d(0, -100%, 0);
        @include easeOut;

        &.show {
            //slide in from bottom
            transform: translate3d(0,0,0);   //to get more info: google"translate 3d" 
        }

        .portrait{
            width: 250px;
            height: 250px;
            background: url(../img/portrait.jpg);
            border-radius: 50%;
            border: solid 3px $secondary-color;
        }
    }

    .nav-item {
        transform: translate3d(600px, 0, 0);
        @include easeOut;

        &.show {
            //slide in from right
            transform: translate3d(0,0,0);   //to get more info: google"translate 3d" 
        }
        &.current > a {         //inside current for a
            color: $secondary-color;
        }
    }
    .nav-link {                                //make menu items bigger
    display: inline-block;        
    position: relative;
    font-size: 30px;
    text-transform: uppercase;
    padding: 1rem 0;
    font-weight: 300;
    color: #fff;
    text-decoration: none;
    @include easeOut;

    &:hover {
        color: $secondary-color;
    }


    }
}

//delay each nav item slid by 0.1s (using for loop in css)
//the same as in javascript: for(let x=0; i<4; i++)
@for $x from 1 through 4 {
    .nav-item:nth-child(#{$x}){       //for each item in menu ...
        transition-delay: $x * 0.1s;
    }
}
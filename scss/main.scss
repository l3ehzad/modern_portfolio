
@import 'config';   //importing config data w/o "_"
@import 'menu';
//@import 'mobile';    -> should be added at the bottom of the main to be run after initial scss.

// set something for everything as follows
* {
    box-sizing: border-box;
}
 
body{
    @include background;
    background: $primary-color;
    color: set-text-color($primary-color);
    height: 100%;
    margin: 0;
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    line-height: 1.5;
}

//Headings
h1,
h2,
h3 {
    margin: 0;
    font-weight: 400;

    &.lg-heading{               //"&." because it's not subclass    //& means inside
        font-size: 5rem;        //rem: multiply the default size
    }
    &.sm-heading {
        margin-bottom: 2rem;
        padding: 0.2rem 1rem;
        background: rgba(lighten($primary-color,20), 0.5);
    }
}

//links
a{
    color: #fff;
    text-decoration: none;      //turn off underlines
}

header{
    position: fixed;        //fix the position of 3-line bar menu
    z-index: 2;
    width: 100%;
}

.text-secondary{
     color: $secondary-color;
}

main{
    padding: 4rem;
    //height: 100%;
    min-height: calc(100vh - 60px);     //using this instead of height:100%; causes the @Copyright text always stick to bottom of the page. (100vh= the whole height - 60px= height of @copyright text)

    .icons{                         //".icons" because it's a subclass
        margin-top: 1rem;
        a{
            padding: 0.4rem;

            &:hover{                 //& means inside | or in regular css -> a:hover
                color: $secondary-color;
                //transition: all 1s ease-out;        //time it takes to change the color
                @include easeOut();     //define function: @mixin nameOfFunction {}
                                        //@include nameOfFunction();              
            }         
        }
    }
    &#home {                //anything inside main with the ID of home
        overflow: hidden;   // not having scroll bars
        h1{
            margin-top: 20vh;
        }
        
    }
}

.about-info {
    display: grid;
    grid-gap: 30px;
    grid-template-areas: 'bioimage bio bio' 'job1 job2 job3'; //bio part on top has 3 parts [image, bio title, bio text] + 3 parts for jobs ((chideman))
    grid-template-columns: repeat(3, fr);           //the same as 1fr 1fr 1fr;

    .bio-image{
        grid-area: bioimage;        //the name is the same as what we put in -> grid-template-areas: 'bioimage';
        margin: auto;
        border-radius: 50%;
        border: $secondary-color 3px solid;
    }
    
    .bio{
        grid-area: bio;
        font-size: 1.5rem;
    }
    
    .job-1{
        grid-area: job1;
    }
    
    .job-2{
        grid-area: job2;
    }
    
    .job-3{
        grid-area: job3;
    }
    
    .job{
        background: lighten($primary-color, 5);     //the amount to be lightened
        padding: 0.5rem;
        border-bottom: $secondary-color 5px solid;
    }
}

// Projects
.project-info{
    display: grid;
    grid-gap: 0.7rem;
    grid-template-columns: repeat(3, 1fr);


    img {
        width: 100%;
        border: 3px #fff solid;

        &:hover {
            opacity: 0.5;
            border-color: $secondary-color;
            @include easeOut
        }
    }
}

// Contact Page
.boxes{
    display: flex;
    flex-wrap: wrap;
    justify-content: space-evenly;
    align-items: center;
    margin-top: 1rem;

    div {
        font-size: 1.5rem;
        border: 3px #fff solid;
        padding: 1.5rem 2.5rem;
        margin-bottom: 3rem;
        @include easeOut;

        &:hover{
            padding: 0.5rem 1.5rem;
            background: $secondary-color;
            color: set-text-color($secondary-color);
            span {
                color: set-text-color($secondary-color);   
            }
        }
    }
}

// Button Styles
.btn {          //there's no class defined as .btn ... we're gonna make it and extend it for btn-light and btn-dark
    display: block;
    padding: .05rem 1rem;
    border: 0;
    margin-bottom: 0.3 rem;
    &:hover{
        background: $secondary-color;
        color: set-text-color($secondary-color);        //color of the txt will adapt itself to secondary-color
    }
}

// now we're extending the above class (.btn) for both .btn-dark and .btn-light
.btn-dark {
    @extend .btn;
    background: darken($primary-color, 50);
    color: #fff;
   
}

.btn-light {
    @extend .btn;
    background: lighten($primary-color, 50);
    color: #333;
  
}

#main-footer {
    text-align: center;
    padding: 1rem;
    background: darken($primary-color, 10);
    color: set-text-color($primary-color);
    height: 60px;
}

@import 'mobile';           //should be run after initial scss ... XXX idk why! at the top would get errors!


